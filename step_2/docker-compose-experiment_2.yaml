# docker-compose.yml for 3-node Kafka (KRaft), Jupyter, Kafdrop

services:
  jupyter1:
    container_name: jupyter1
    image: jupyter/scipy-notebook:notebook-7.0.3 # Using a specific recent version
    hostname: jupyter1
    volumes:
      - ./notebooks:/home/jovyan/ # Maps local './notebooks' to container's home
    ports:
      - "8888:8888" # JupyterLab access
    environment:
      PYTHONUNBUFFERED: 1
      # CLUSTER_ID required by Kafka KRaft nodes below (ensure it matches)
      CLUSTER_ID: 'BDb4EWyiS1GjcEKCew2HvQ'
    command: "start-notebook.sh --NotebookApp.token='' --NotebookApp.password=''" # Disables token/password auth for simplicity

  kafka1:
    image: confluentinc/cp-kafka:latest # Use latest confluentinc Kafka image
    container_name: kafka1
    hostname: kafka1
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT'
      KAFKA_LISTENERS: 'INTERNAL://kafka1:9092,CONTROLLER://kafka1:9093'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka1:9092' # How clients like jupyter1 connect
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka1:9093,2@kafka2:9093,3@kafka3:9093' # KRaft voters
      KAFKA_PROCESS_ROLES: 'broker,controller' # Runs as both broker and controller
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0 # Speed up consumer group joins
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3 # Internal topic replication (matches broker count)
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3 # Internal topic replication
      CLUSTER_ID: 'BDb4EWyiS1GjcEKCew2HvQ' # Must match across nodes
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs' # Kafka data logs inside container

  kafka2:
    image: confluentinc/cp-kafka:latest
    container_name: kafka2
    hostname: kafka2
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT'
      KAFKA_LISTENERS: 'INTERNAL://kafka2:9092,CONTROLLER://kafka2:9093'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka2:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka1:9093,2@kafka2:9093,3@kafka3:9093'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      CLUSTER_ID: 'BDb4EWyiS1GjcEKCew2HvQ'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'

  kafka3:
    image: confluentinc/cp-kafka:latest
    container_name: kafka3
    hostname: kafka3
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT'
      KAFKA_LISTENERS: 'INTERNAL://kafka3:9092,CONTROLLER://kafka3:9093'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka3:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka1:9093,2@kafka2:9093,3@kafka3:9093'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      CLUSTER_ID: 'BDb4EWyiS1GjcEKCew2HvQ'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop1
    ports:
      - "9000:9000" # Kafdrop Web UI access
    environment:
      # Connects to all brokers for comprehensive view
      KAFKA_BROKERCONNECT: "kafka1:9092,kafka2:9092,kafka3:9092"
    depends_on: # Wait for at least one broker to be starting
      - kafka1
      - kafka2
      - kafka3

volumes:
  notebooks_volume: 
